{
  "comments": [
    {
      "key": {
        "uuid": "34e1e54f_adbdd765",
        "filename": "mdsalutil/mdsalutil-api/src/main/java/org/opendaylight/genius/mdsalutil/cache/DataObjectCache.java",
        "patchSetId": 10
      },
      "lineNbr": 39,
      "author": {
        "id": 817
      },
      "writtenOn": "2018-01-08T05:26:23Z",
      "side": 1,
      "message": "Not sure, whether there was already any discussion, why we don\u0027t want to use infrautils cache for the caching part?",
      "revId": "c639ad014f832c021f5d9ed2c439938572479420",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d78bc85_0ba0439b",
        "filename": "mdsalutil/mdsalutil-api/src/main/java/org/opendaylight/genius/mdsalutil/cache/DataObjectCache.java",
        "patchSetId": 10
      },
      "lineNbr": 39,
      "author": {
        "id": 817
      },
      "writtenOn": "2018-01-08T05:28:20Z",
      "side": 1,
      "message": "Ignore the above comment",
      "parentUuid": "34e1e54f_adbdd765",
      "revId": "c639ad014f832c021f5d9ed2c439938572479420",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6956ed2e_27a0fb98",
        "filename": "mdsalutil/mdsalutil-api/src/main/java/org/opendaylight/genius/mdsalutil/cache/DataObjectCache.java",
        "patchSetId": 10
      },
      "lineNbr": 39,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-01-08T17:37:34Z",
      "side": 1,
      "message": "My understanding is that Tom plans to propose follow-up patches to switch the impl over from direct use of the Guava cache to the infrautils cache, as anticipated by the infrautils.CacheProvider argument - right, Tom?",
      "parentUuid": "4d78bc85_0ba0439b",
      "revId": "c639ad014f832c021f5d9ed2c439938572479420",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8dfc09e6_e3ceacd2",
        "filename": "mdsalutil/mdsalutil-api/src/main/java/org/opendaylight/genius/mdsalutil/cache/DataObjectCache.java",
        "patchSetId": 10
      },
      "lineNbr": 44,
      "author": {
        "id": 817
      },
      "writtenOn": "2018-01-08T05:30:53Z",
      "side": 1,
      "message": "Currently, infrautils cache has some eviction policy based on size of the cache..  what we were doing so far is to cache almost all datastore entries in the hashmap, without any eviction policy.. Don\u0027t see any size params passed on here.. In that case, will there be any impact on scaling once we integrate the new caching framework for our existing usecases?",
      "revId": "c639ad014f832c021f5d9ed2c439938572479420",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d11f5496_3d406657",
        "filename": "mdsalutil/mdsalutil-api/src/main/java/org/opendaylight/genius/mdsalutil/cache/DataObjectCache.java",
        "patchSetId": 10
      },
      "lineNbr": 44,
      "author": {
        "id": 1842
      },
      "writtenOn": "2018-01-08T13:51:49Z",
      "side": 1,
      "message": "Of course a permanent cache could have impact depending on how much data is being cached - impossible to answer that question here - however memory is cheap and you can always add more memory to scale. Remember that the DS has an in-memory data tree with no limits. \n\nThat said, the purpose of this cache is to avoid having to do blocking reads on demand hence we populate it via change notifications which means we really don\u0027t want to evict (except when the data is actually removed from the DS).",
      "parentUuid": "8dfc09e6_e3ceacd2",
      "revId": "c639ad014f832c021f5d9ed2c439938572479420",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c6146513_25493d82",
        "filename": "mdsalutil/mdsalutil-api/src/main/java/org/opendaylight/genius/mdsalutil/cache/DataObjectCache.java",
        "patchSetId": 10
      },
      "lineNbr": 51,
      "author": {
        "id": 3276
      },
      "writtenOn": "2018-01-04T09:37:31Z",
      "side": 1,
      "message": "is this needed? should listener registration provide us with existing data and populate the cache?",
      "revId": "c639ad014f832c021f5d9ed2c439938572479420",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8b040fb1_4bc03247",
        "filename": "mdsalutil/mdsalutil-api/src/main/java/org/opendaylight/genius/mdsalutil/cache/DataObjectCache.java",
        "patchSetId": 10
      },
      "lineNbr": 51,
      "author": {
        "id": 1842
      },
      "writtenOn": "2018-01-04T14:43:26Z",
      "side": 1,
      "message": "I\u0027m trying to duplicate the previous behavior. There could be a race where the the DTCN hasn\u0027t occurred yet, especially on followers where replication could be a bit behind. I\u0027m fine with removing the read if we can be sure it wouldn\u0027t cause an issue  but with the fragile history of this code base I don\u0027t think we can be sure.",
      "parentUuid": "c6146513_25493d82",
      "revId": "c639ad014f832c021f5d9ed2c439938572479420",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b4dab6ca_5982f6cb",
        "filename": "mdsalutil/mdsalutil-api/src/main/java/org/opendaylight/genius/mdsalutil/cache/DataObjectCache.java",
        "patchSetId": 10
      },
      "lineNbr": 51,
      "author": {
        "id": 3276
      },
      "writtenOn": "2018-01-05T04:39:29Z",
      "side": 1,
      "message": "Not an issue.\n\n1. If this race is an issue, it is badly designed code anyhow. There will always be lag in duplication. BEsides, this is the way most caches are populated today already, through notifications and not bulk reads.\n2. Caches will be likely created at startup and read would end up blocking/delaying bring up, want to avoid that.",
      "parentUuid": "8b040fb1_4bc03247",
      "revId": "c639ad014f832c021f5d9ed2c439938572479420",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "336d3af6_b06be060",
        "filename": "mdsalutil/mdsalutil-api/src/main/java/org/opendaylight/genius/mdsalutil/cache/DataObjectCache.java",
        "patchSetId": 10
      },
      "lineNbr": 51,
      "author": {
        "id": 1842
      },
      "writtenOn": "2018-01-05T05:42:17Z",
      "side": 1,
      "message": "Take a look at https://git.opendaylight.org/gerrit/#/c/66562/. It seems to be a race where a cache isn\u0027t yet populated by a DTCL.\n\nI agree with #1 but unfortunately genius and netvirt has quite a bit of such fragile, maybe badly designed code.  I also agree with #2 but there are already many, many blocking reads/writes littered everywhere in the code base (and more being added in pending patches). I am not adding more to that - I\u0027m duplicating the previous behavior. For these reasons, I feel much more comfortable populating the cache on miss, especially since late in the release. I do not want to add potential latent timing /race conditions. If you or someone later on wants to analyze the uses and can determine the read is not needed, then that\u0027s fine.",
      "parentUuid": "b4dab6ca_5982f6cb",
      "revId": "c639ad014f832c021f5d9ed2c439938572479420",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eec43c3e_562e93d6",
        "filename": "mdsalutil/mdsalutil-api/src/main/java/org/opendaylight/genius/mdsalutil/cache/DataObjectCache.java",
        "patchSetId": 10
      },
      "lineNbr": 100,
      "author": {
        "id": 3276
      },
      "writtenOn": "2018-01-04T09:37:31Z",
      "side": 1,
      "message": "would be good to have another get method that doesn\u0027t do a read. We mainly use caches to avoid DS reads. There are use cases where we only want to check if something exists or not and avoid read on DS in case of cache miss.",
      "revId": "c639ad014f832c021f5d9ed2c439938572479420",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9745cff8_b9230c86",
        "filename": "mdsalutil/mdsalutil-api/src/main/java/org/opendaylight/genius/mdsalutil/cache/DataObjectCache.java",
        "patchSetId": 10
      },
      "lineNbr": 100,
      "author": {
        "id": 1842
      },
      "writtenOn": "2018-01-04T14:43:26Z",
      "side": 1,
      "message": "I thought of that but I don\u0027t recall seeing any such cases where it just reads from the cache. Maybe I did miss one - if so can you point one out?",
      "parentUuid": "eec43c3e_562e93d6",
      "revId": "c639ad014f832c021f5d9ed2c439938572479420",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "00625ca1_370823e1",
        "filename": "mdsalutil/mdsalutil-api/src/main/java/org/opendaylight/genius/mdsalutil/cache/DataObjectCache.java",
        "patchSetId": 10
      },
      "lineNbr": 100,
      "author": {
        "id": 3276
      },
      "writtenOn": "2018-01-05T04:39:29Z",
      "side": 1,
      "message": "Maybe not in Genius code, but there are few in NEtvirt and I have some upcoming use cases in ITM. The current caches have been left as is primarily coz we been waiting to move to new cache infra first. Either ways, having the option for get on cache only is desirable from framework perspective. I think it should be easy to get in, but we can always add it in later if needed.",
      "parentUuid": "9745cff8_b9230c86",
      "revId": "c639ad014f832c021f5d9ed2c439938572479420",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bb8e914e_b2d7be5f",
        "filename": "mdsalutil/mdsalutil-api/src/main/java/org/opendaylight/genius/mdsalutil/cache/DataObjectCache.java",
        "patchSetId": 10
      },
      "lineNbr": 100,
      "author": {
        "id": 1842
      },
      "writtenOn": "2018-01-05T05:42:17Z",
      "side": 1,
      "message": "Let\u0027s add it in later if needed. I\u0027d like to get this in asap - I have several patches following this to eliminate static caches (then we can get rid of DataStoreCache and CacheUtils).",
      "parentUuid": "00625ca1_370823e1",
      "revId": "c639ad014f832c021f5d9ed2c439938572479420",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}
{
  "comments": [
    {
      "key": {
        "uuid": "1a622d24_d2e5f338",
        "filename": "fcapsapplication/fcapsapplication-impl/src/main/java/org/opendaylight/genius/fcapsapp/FcapsProvider.java",
        "patchSetId": 8
      },
      "lineNbr": 65,
      "author": {
        "id": 4922
      },
      "writtenOn": "2017-01-11T09:56:46Z",
      "side": 1,
      "message": "Since NodeEvenListener is a generic class, not able to inject instance ref via blueprint",
      "parentUuid": "1a622d24_97040d4b",
      "range": {
        "startLine": 65,
        "startChar": 8,
        "endLine": 65,
        "endChar": 76
      },
      "revId": "049b72d10d610a89efe2e12d0cce1d5814a47da5",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_6aa2234c",
        "filename": "fcapsapplication/fcapsapplication-impl/src/main/java/org/opendaylight/genius/fcapsapp/FcapsProvider.java",
        "patchSetId": 8
      },
      "lineNbr": 65,
      "author": {
        "id": 5867
      },
      "writtenOn": "2017-01-11T23:06:22Z",
      "side": 1,
      "message": "This is technically not correct. Blueprint *CAN* inject \"generic normal bean classes\" (which are not OSGi services) as well.  For example, it would be possible to add a NodeEvenListener argument to the FcapsProvider, and Blueprint would inject it.  You would just have to mark NodeEventListener as a @Singleton itself again, and annotate its constructor, so that it itself gets the EntityOwnershipService injected.",
      "parentUuid": "1a622d24_d2e5f338",
      "range": {
        "startLine": 65,
        "startChar": 8,
        "endLine": 65,
        "endChar": 76
      },
      "revId": "049b72d10d610a89efe2e12d0cce1d5814a47da5",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_97040d4b",
        "filename": "fcapsapplication/fcapsapplication-impl/src/main/java/org/opendaylight/genius/fcapsapp/FcapsProvider.java",
        "patchSetId": 8
      },
      "lineNbr": 65,
      "author": {
        "id": 6233
      },
      "writtenOn": "2017-12-14T20:52:15Z",
      "side": 1,
      "message": "Is it possible to accommodate this via inject framework ?",
      "range": {
        "startLine": 65,
        "startChar": 8,
        "endLine": 65,
        "endChar": 76
      },
      "revId": "049b72d10d610a89efe2e12d0cce1d5814a47da5",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}
{
  "comments": [
    {
      "key": {
        "uuid": "9a245df4_451598e3",
        "filename": "fcapsapplication/fcapsapplication-impl/src/main/java/org/opendaylight/genius/fcapsapp/performancecounter/PacketInCounterHandler.java",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1842
      },
      "writtenOn": "2017-11-15T02:11:40Z",
      "side": 1,
      "message": "This is a singleton so these should not be static (actually they shouldn\u0027t be regardless)",
      "revId": "fcb8eb59e446ac47f490e6cfd1d67648ef8e50aa",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a245df4_347c10b5",
        "filename": "fcapsapplication/fcapsapplication-impl/src/main/java/org/opendaylight/genius/fcapsapp/performancecounter/PacketInCounterHandler.java",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 5861
      },
      "writtenOn": "2017-11-15T23:02:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9a245df4_451598e3",
      "revId": "fcb8eb59e446ac47f490e6cfd1d67648ef8e50aa",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a245df4_e18da1d4",
        "filename": "fcapsapplication/fcapsapplication-impl/src/main/java/org/opendaylight/genius/fcapsapp/performancecounter/PacketInCounterHandler.java",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 5867
      },
      "writtenOn": "2017-11-15T00:28:36Z",
      "side": 1,
      "message": "NOK: I\u0027ve no idea what this code really does, but it seems to me that the transformation you\u0027re doing here is not a 1:1 equivalent?  Because in the original the incrementAndGet() would not have happend in the else, IfAbsent, right? So doesn\u0027t this lead to it being off +1? Doesn\u0027t matter? (If this is intentional and I\u0027m missing, then a comment here for reviewers would help to clarify...)",
      "revId": "fcb8eb59e446ac47f490e6cfd1d67648ef8e50aa",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a245df4_e5dbec4c",
        "filename": "fcapsapplication/fcapsapplication-impl/src/main/java/org/opendaylight/genius/fcapsapp/performancecounter/PacketInCounterHandler.java",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1842
      },
      "writtenOn": "2017-11-15T02:11:40Z",
      "side": 1,
      "message": "To preserve existing behavior then set to FIRST_VALUE - 1 - then it\u0027s equivalent.",
      "parentUuid": "9a245df4_e18da1d4",
      "revId": "fcb8eb59e446ac47f490e6cfd1d67648ef8e50aa",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a245df4_c1b17d90",
        "filename": "fcapsapplication/fcapsapplication-impl/src/main/java/org/opendaylight/genius/fcapsapp/performancecounter/PacketInCounterHandler.java",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 5867
      },
      "writtenOn": "2017-11-15T00:28:36Z",
      "side": 1,
      "message": "OK: This puts a new AtomicLong(FIRST_VALUE) instead of a FIRST_VALUE in the Map, which you then take the String.valueOf() so this seems a little bit pointless.. but I can see it\u0027s because ingressPacketMap get will give you an AtomicLong; so OK..",
      "revId": "fcb8eb59e446ac47f490e6cfd1d67648ef8e50aa",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a245df4_85c15056",
        "filename": "fcapsapplication/fcapsapplication-impl/src/main/java/org/opendaylight/genius/fcapsapp/performancecounter/PacketInCounterHandler.java",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1842
      },
      "writtenOn": "2017-11-15T02:11:40Z",
      "side": 1,
      "message": "I assume the \"OrDefault\" part is in case the entry just added on line 48 is removed in between. However this would lead to a discrepancy in the 2 maps. It seems packetInMap is a mirror of ingressPacketMap with key and values in a different form. Seems odd. The nodeRemovedNotification method below update the 2 maps atomically via synchronized so this should as well.\n\nThe other option is to eliminate the packetInMap. It is only used in connectToPMAgent so it can be constructed on demand from the ingressPacketMap. I prefer that approach - simplifies the code.",
      "parentUuid": "9a245df4_c1b17d90",
      "revId": "fcb8eb59e446ac47f490e6cfd1d67648ef8e50aa",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a245df4_9f019507",
        "filename": "fcapsapplication/fcapsapplication-impl/src/main/java/org/opendaylight/genius/fcapsapp/performancecounter/PacketInCounterHandler.java",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 5861
      },
      "writtenOn": "2017-11-15T23:02:48Z",
      "side": 1,
      "message": "Yes, I do not fully get the point of mimic the ingressPacketMap, it looks like the packetInMap is just used to expose the ingressPacketMap with the appropriate keys. I do not dare to just remove it, they might be consumed by some tool via JMX. I think these, and other \"counters\" need some refactoring or even better, being replaced by the ones in infrautils.",
      "parentUuid": "9a245df4_85c15056",
      "revId": "fcb8eb59e446ac47f490e6cfd1d67648ef8e50aa",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a245df4_ff3891d4",
        "filename": "fcapsapplication/fcapsapplication-impl/src/main/java/org/opendaylight/genius/fcapsapp/performancecounter/PacketInCounterHandler.java",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1842
      },
      "writtenOn": "2017-11-15T23:07:07Z",
      "side": 1,
      "message": "But it\u0027s only actually used in connectToPMAgent - passed to sendPacketInCounterUpdate. It can be created on the fly. Easier than trying to keep 2 maps in sync when one can be derived from the other.",
      "parentUuid": "9a245df4_9f019507",
      "revId": "fcb8eb59e446ac47f490e6cfd1d67648ef8e50aa",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a245df4_dfc82daa",
        "filename": "fcapsapplication/fcapsapplication-impl/src/main/java/org/opendaylight/genius/fcapsapp/performancecounter/PacketInCounterHandler.java",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 5861
      },
      "writtenOn": "2017-11-15T23:28:58Z",
      "side": 1,
      "message": "Ok, I\u0027ll do it :)",
      "parentUuid": "9a245df4_ff3891d4",
      "revId": "fcb8eb59e446ac47f490e6cfd1d67648ef8e50aa",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}
{
  "comments": [
    {
      "key": {
        "uuid": "b9e64dc5_f3cc17c6",
        "filename": "mdsalutil/mdsalutil-api/src/main/java/org/opendaylight/genius/utils/JvmGlobalLocks.java",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-11-19T10:19:23Z",
      "side": 1,
      "message": "perhaps we could \"tone this down\" a bit?  I\u0027m OK with it in a JIRA (actually make me LOL), but for a JavaDoc it seems a little... you know.  Tom, thoughts?",
      "revId": "235c973d2532c1a462704768cb12146e544c2169",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6434cfdc_8dae5112",
        "filename": "mdsalutil/mdsalutil-api/src/main/java/org/opendaylight/genius/utils/JvmGlobalLocks.java",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 649
      },
      "writtenOn": "2018-11-19T12:00:17Z",
      "side": 1,
      "message": "I can tone it down sure, but people should be aware why this class even exists and that we should never ever go back -- so as long as getLockForString() is here, I think this level is appropriate :)",
      "parentUuid": "b9e64dc5_f3cc17c6",
      "revId": "235c973d2532c1a462704768cb12146e544c2169",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bd31d79b_93c8340d",
        "filename": "mdsalutil/mdsalutil-api/src/main/java/org/opendaylight/genius/utils/JvmGlobalLocks.java",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-11-19T10:19:23Z",
      "side": 1,
      "message": "looking at your diff in LockManagerServiceImpl in this change, and the equivalent in the netvirt changes you\u0027ve raised under NETVIRT-1510, it seems to me this should be:\n\n    ReentrantLock lock \u003d JvnGlobalLocks.getLockForString(foo);",
      "revId": "235c973d2532c1a462704768cb12146e544c2169",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b52ff3c5_a6238e02",
        "filename": "mdsalutil/mdsalutil-api/src/main/java/org/opendaylight/genius/utils/JvmGlobalLocks.java",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 649
      },
      "writtenOn": "2018-11-19T12:00:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bd31d79b_93c8340d",
      "revId": "235c973d2532c1a462704768cb12146e544c2169",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b92389b5_00e51eb4",
        "filename": "mdsalutil/mdsalutil-api/src/main/java/org/opendaylight/genius/utils/JvmGlobalLocks.java",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-11-19T10:19:23Z",
      "side": 1,
      "message": "given that all currently known usages of this utility will obtain (get()) and then immediately lock() IMHO it would be convenient to offer, in addition to getLockFor() direct lock() methods, which get and implicitly lock.",
      "revId": "235c973d2532c1a462704768cb12146e544c2169",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e2fc1873_3e5d352a",
        "filename": "mdsalutil/mdsalutil-api/src/main/java/org/opendaylight/genius/utils/JvmGlobalLocks.java",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 649
      },
      "writtenOn": "2018-11-19T12:00:17Z",
      "side": 1,
      "message": "I thought about it, but then it prevents usages where you actually hold on to the lock. Note this is primarily a migration class, I do not want it to grow into a full-blown thing in the first iteration.",
      "parentUuid": "b92389b5_00e51eb4",
      "revId": "235c973d2532c1a462704768cb12146e544c2169",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "78b4ea9e_377854ae",
        "filename": "mdsalutil/mdsalutil-api/src/main/java/org/opendaylight/genius/utils/JvmGlobalLocks.java",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-11-19T10:19:23Z",
      "side": 1,
      "message": "real shame that ReentrantLock (@since 1.5) does not implements AutoCloseable (cauz that\u0027s @since 1.7).  How about we offer a CloseableReentrantLock and make the methods here return that?  That way, one can do this - and most importantly we can detect with static analysis tools when people forget to:\n\n    String foo;\n    try (ReentrantLock lock \u003d JvnGlobalLocks.getLockForString(foo)) {\n        lock.lock();\n        // ...\n    }",
      "revId": "235c973d2532c1a462704768cb12146e544c2169",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c58ea8d2_407521d1",
        "filename": "mdsalutil/mdsalutil-api/src/main/java/org/opendaylight/genius/utils/JvmGlobalLocks.java",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 4540
      },
      "writtenOn": "2018-11-19T10:36:32Z",
      "side": 1,
      "message": "If you do that, you should acquire the lock on creation. But the whole point of ReentrantLock is to be shared (which is why it isn’t AutoCloseable) — otherwise there’s no need for it to be re-entrant.",
      "parentUuid": "78b4ea9e_377854ae",
      "revId": "235c973d2532c1a462704768cb12146e544c2169",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39a221dd_1491afec",
        "filename": "mdsalutil/mdsalutil-api/src/main/java/org/opendaylight/genius/utils/JvmGlobalLocks.java",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 649
      },
      "writtenOn": "2018-11-19T12:00:17Z",
      "side": 1,
      "message": "This deals with getting rid of the \u0027String.intern()\u0027 part, i.e. getting hold of a global ReentrantLock. How it is then used is outside of scope of this class.",
      "parentUuid": "c58ea8d2_407521d1",
      "revId": "235c973d2532c1a462704768cb12146e544c2169",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07e4a929_766dc1b0",
        "filename": "mdsalutil/mdsalutil-api/src/main/java/org/opendaylight/genius/utils/JvmGlobalLocks.java",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 4540
      },
      "writtenOn": "2018-11-19T12:42:26Z",
      "side": 1,
      "message": "To be clear, my comment was in reply to Michael’s, not a comment on the code itself.",
      "parentUuid": "39a221dd_1491afec",
      "revId": "235c973d2532c1a462704768cb12146e544c2169",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b77cbbae_dc542790",
        "filename": "mdsalutil/mdsalutil-api/src/main/java/org/opendaylight/genius/utils/JvmGlobalLocks.java",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-11-19T20:37:06Z",
      "side": 1,
      "message": "But this utility appears to be intended to be used, and proposed usage in this patch and related netvirt patches illutrate, using it locally, not for the ReentrantLock it returns to be shared... most likely, few people who are going to start using this class by virtue of copy/paste, will actually know what a ReentrantLock lock is, and how to use it.  IMHO this utility would be safer it it treated the ReentrantLock as an implementation detail, and returned an opaque AutoCloseable. But anyway, whatever; I won\u0027t -1 again.",
      "parentUuid": "07e4a929_766dc1b0",
      "revId": "235c973d2532c1a462704768cb12146e544c2169",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ec11c8c_deef5dbe",
        "filename": "mdsalutil/mdsalutil-api/src/main/java/org/opendaylight/genius/utils/JvmGlobalLocks.java",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-11-19T10:19:23Z",
      "side": 1,
      "message": "I was wondering if, hypothetically, a GC at the wrong moment could clear out a NamedReentrantLock and a subsequent use would return another one and so they wouldn\u0027t be the same ReentrantLock (subclassed) object.. doesn\u0027t that defeat the purpose of this?  Wouldn\u0027t some sort of data structure keeping tabs on (counting) the number of concurrently open locks, and remove from map when none left, be more appropriate here?",
      "revId": "235c973d2532c1a462704768cb12146e544c2169",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b8422253_4a8ac2e5",
        "filename": "mdsalutil/mdsalutil-api/src/main/java/org/opendaylight/genius/utils/JvmGlobalLocks.java",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 4540
      },
      "writtenOn": "2018-11-19T10:36:32Z",
      "side": 1,
      "message": "If all references to a lock are lost, outside the cache, then it’s either not locked, or we’re in trouble. So a weak reference here is fine.",
      "parentUuid": "1ec11c8c_deef5dbe",
      "revId": "235c973d2532c1a462704768cb12146e544c2169",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2b966f8f_157572e7",
        "filename": "mdsalutil/mdsalutil-api/src/main/java/org/opendaylight/genius/utils/JvmGlobalLocks.java",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 649
      },
      "writtenOn": "2018-11-19T12:00:17Z",
      "side": 1,
      "message": "if you do:\n\ngetLockForString(\"foo\").lock();\ntry {\n    // ..\n} finally {\n    getLockForString(\"foo\").unlock();\n}\n\nit will break down, but that is definitely not how ReentrantLock is meant to be used.\n\nYes, a lot of belt-and-suspenders could be baked into this class, but the goal is to identify JVM-global locks, understand their semantics and replace them with localized locks. Certainly the lockmanager (which is why this class is in genius and not netvirt) looks like could very much work with explicitly-managed locks.",
      "parentUuid": "b8422253_4a8ac2e5",
      "revId": "235c973d2532c1a462704768cb12146e544c2169",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e126b72b_0d2eeed6",
        "filename": "mdsalutil/mdsalutil-api/src/main/java/org/opendaylight/genius/utils/JvmGlobalLocks.java",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-11-19T20:37:06Z",
      "side": 1,
      "message": "k, TX.",
      "parentUuid": "2b966f8f_157572e7",
      "revId": "235c973d2532c1a462704768cb12146e544c2169",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}
{
  "comments": [
    {
      "key": {
        "uuid": "a1ec914f_1f928f6d",
        "filename": "idmanager/idmanager-impl/src/main/java/org/opendaylight/genius/idmanager/IdPoolListener.java",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 5278
      },
      "writtenOn": "2018-01-08T08:49:13Z",
      "side": 1,
      "message": "It is always SingleThreadExecutor for maintaining DCN order. shouldn\u0027t it moved to AbstractClusteredAsyncDataTreeChangeListener ?",
      "range": {
        "startLine": 36,
        "startChar": 23,
        "endLine": 36,
        "endChar": 46
      },
      "revId": "306a9bfc54dd361f9ac46d05ae42b75ecf1cde88",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2afddc4f_5145aa83",
        "filename": "idmanager/idmanager-impl/src/main/java/org/opendaylight/genius/idmanager/IdPoolListener.java",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1842
      },
      "writtenOn": "2018-01-08T15:07:19Z",
      "side": 1,
      "message": "The data store guarantees DCN ordering so it is not necessary for DTCLs to use a SingleThreadExecutor to maintain order. The only reason to off-load DCNs on a separate thread is to avoid blocking the calling thread for too long. A DTCL that is relatively fast and does not block does not need to off-load at all. For DTCLs that do block, many off-load to the JobCoordinator in which case a SingleThreadExecutor is redundant and not needed.  \n\nThe prior base class always created a dedicated SingleThreadExecutor which could be problematic for scale with many such listeners. The new base class leaves it up to the user to decide what type of executor to use.  For those that don\u0027t need to off-load, they can pass a direct executor. Some may want to use a SingleThreadExecutor but may want to re-use one across several DTCLs to preserve thread resources. Some may not need to maintain DCN order and thus can use a thread pool to process DCNs in parallel.",
      "parentUuid": "a1ec914f_1f928f6d",
      "range": {
        "startLine": 36,
        "startChar": 23,
        "endLine": 36,
        "endChar": 46
      },
      "revId": "306a9bfc54dd361f9ac46d05ae42b75ecf1cde88",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "952ba6d5_18712d68",
        "filename": "idmanager/idmanager-impl/src/main/java/org/opendaylight/genius/idmanager/IdPoolListener.java",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 5278
      },
      "writtenOn": "2018-01-08T15:40:16Z",
      "side": 1,
      "message": "OK, thanks for clarification. \nbut AFAIK both genius/netvirt applications always need to maintain DCN order.\nso shouldn\u0027t it moved to AbstractClusteredAsyncDataTreeChangeListener because this class in still in genius ?",
      "parentUuid": "2afddc4f_5145aa83",
      "range": {
        "startLine": 36,
        "startChar": 23,
        "endLine": 36,
        "endChar": 46
      },
      "revId": "306a9bfc54dd361f9ac46d05ae42b75ecf1cde88",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "953aa1b9_2deb2933",
        "filename": "idmanager/idmanager-impl/src/main/java/org/opendaylight/genius/idmanager/IdPoolListener.java",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1842
      },
      "writtenOn": "2018-01-09T06:53:22Z",
      "side": 1,
      "message": "not sure I follow...",
      "parentUuid": "952ba6d5_18712d68",
      "range": {
        "startLine": 36,
        "startChar": 23,
        "endLine": 36,
        "endChar": 46
      },
      "revId": "306a9bfc54dd361f9ac46d05ae42b75ecf1cde88",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "571cff9a_48a41fd4",
        "filename": "idmanager/idmanager-impl/src/main/java/org/opendaylight/genius/idmanager/IdPoolListener.java",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1842
      },
      "writtenOn": "2018-01-09T07:14:54Z",
      "side": 1,
      "message": "I assume you\u0027re saying that for the DTCL\u0027s in genius/netvirt that want to off-load, they all need to maintain order and thus need to use a single-threaded executor so we should implicitly create one in the base class like it did before.  2 reasons as I noted earlier:\n\n- we shouldn\u0027t assume every DTCL will need to maintain order -\n   a DTCL could process DCNs in parallel.\n\n- we may want to share an executor (single-threaded or not) \n   across several DTCLs to preserve thread resources.",
      "parentUuid": "953aa1b9_2deb2933",
      "range": {
        "startLine": 36,
        "startChar": 23,
        "endLine": 36,
        "endChar": 46
      },
      "revId": "306a9bfc54dd361f9ac46d05ae42b75ecf1cde88",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da64f01d_3adb0253",
        "filename": "idmanager/idmanager-impl/src/main/java/org/opendaylight/genius/idmanager/IdPoolListener.java",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 5278
      },
      "writtenOn": "2018-01-09T08:53:24Z",
      "side": 1,
      "message": "Yes, I understand the purpose of this change. My intention is just only to avoid executor handling boilerplate code in each listener class because currently every DTCLs in netvirt/genius neither process DCNs in parallel nor sharing executor across DTCLs (Please comment if I\u0027m wrong).",
      "parentUuid": "571cff9a_48a41fd4",
      "range": {
        "startLine": 36,
        "startChar": 23,
        "endLine": 36,
        "endChar": 46
      },
      "revId": "306a9bfc54dd361f9ac46d05ae42b75ecf1cde88",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "912343a3_b22c6bc7",
        "filename": "idmanager/idmanager-impl/src/main/java/org/opendaylight/genius/idmanager/IdPoolListener.java",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 5278
      },
      "writtenOn": "2018-01-08T08:49:13Z",
      "side": 1,
      "message": "same here.",
      "revId": "306a9bfc54dd361f9ac46d05ae42b75ecf1cde88",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "657aa77f_94c6c232",
        "filename": "idmanager/idmanager-impl/src/main/java/org/opendaylight/genius/idmanager/IdPoolListener.java",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 5861
      },
      "writtenOn": "2018-01-09T15:01:48Z",
      "side": 1,
      "message": "The listener needs to shutdown the executor since it owns it.",
      "parentUuid": "912343a3_b22c6bc7",
      "revId": "306a9bfc54dd361f9ac46d05ae42b75ecf1cde88",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "568d7597_9c05bc81",
        "filename": "idmanager/idmanager-impl/src/main/java/org/opendaylight/genius/idmanager/IdPoolListener.java",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 5278
      },
      "writtenOn": "2018-01-10T08:58:52Z",
      "side": 1,
      "message": "I was referring moving create/shutdown of executor to AbstractClusteredAsyncDataTreeChangeListener class. But anyway I don\u0027t want to hold this review if you/Tom disagree to it.",
      "parentUuid": "657aa77f_94c6c232",
      "revId": "306a9bfc54dd361f9ac46d05ae42b75ecf1cde88",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7dd22271_a6127adb",
        "filename": "idmanager/idmanager-impl/src/main/java/org/opendaylight/genius/idmanager/IdPoolListener.java",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 1842
      },
      "writtenOn": "2018-01-10T14:29:12Z",
      "side": 1,
      "message": "I don\u0027t necessarily disagree with what you\u0027re saying but the intent of passing the Executor instead of implicitly creating a dedicated single-threaded Executor is to make the user think about it, eg do you really need a dedicated executor, will it scale, can/should you share an executor across listeners, etc. This is similar to the guava APIs where they have deprecated overloaded methods that pass the directExecutor() - so you now have to explicitly pass directExecutor() which is a minor inconvenience but it forces you to think about it.",
      "parentUuid": "568d7597_9c05bc81",
      "revId": "306a9bfc54dd361f9ac46d05ae42b75ecf1cde88",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}
{
  "comments": [
    {
      "key": {
        "uuid": "7a1969be_fd395dd9",
        "filename": "idmanager/idmanager-impl/src/main/java/org/opendaylight/genius/idmanager/jobs/CleanUpJob.java",
        "patchSetId": 5
      },
      "lineNbr": 99,
      "author": {
        "id": 5278
      },
      "writtenOn": "2017-11-30T17:15:51Z",
      "side": 1,
      "message": "doesn\u0027t SingleTransactionDataBroker too have tx leaks ?\n shouldn\u0027t we use txRunner instead ?",
      "revId": "5a1a1f8a91c43e8bd341cf2a8724ae24d845898b",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_ddd90185",
        "filename": "idmanager/idmanager-impl/src/main/java/org/opendaylight/genius/idmanager/jobs/CleanUpJob.java",
        "patchSetId": 5
      },
      "lineNbr": 99,
      "author": {
        "id": 4540
      },
      "writtenOn": "2017-11-30T17:36:18Z",
      "side": 1,
      "message": "We could, in a second phase. syncWrite doesn’t leak its transactions, so we’re OK there.",
      "parentUuid": "7a1969be_fd395dd9",
      "revId": "5a1a1f8a91c43e8bd341cf2a8724ae24d845898b",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_944d9b75",
        "filename": "idmanager/idmanager-impl/src/main/java/org/opendaylight/genius/idmanager/jobs/CleanUpJob.java",
        "patchSetId": 5
      },
      "lineNbr": 99,
      "author": {
        "id": 5278
      },
      "writtenOn": "2017-12-04T14:36:13Z",
      "side": 1,
      "message": "When I saw SingleTxDataBroker last week, it was still using tx.submit().checkedGet() without doing tx.cancel() for TransactionCommitFailedException.\nIt looks like Michael merged the changes for SingleTxDataBroker to use RetryingTxRunner some days back. This should fix the problem.",
      "parentUuid": "7a1969be_ddd90185",
      "revId": "5a1a1f8a91c43e8bd341cf2a8724ae24d845898b",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_14f9abc8",
        "filename": "idmanager/idmanager-impl/src/main/java/org/opendaylight/genius/idmanager/jobs/CleanUpJob.java",
        "patchSetId": 5
      },
      "lineNbr": 99,
      "author": {
        "id": 4540
      },
      "writtenOn": "2017-12-04T15:39:27Z",
      "side": 1,
      "message": "I’m pretty sure a submitted transaction doesn’t need to be canceled, ever, even if it throws a TransactionCommitFailedException.",
      "parentUuid": "7a1969be_944d9b75",
      "revId": "5a1a1f8a91c43e8bd341cf2a8724ae24d845898b",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_340027aa",
        "filename": "idmanager/idmanager-impl/src/main/java/org/opendaylight/genius/idmanager/jobs/CleanUpJob.java",
        "patchSetId": 5
      },
      "lineNbr": 99,
      "author": {
        "id": 5867
      },
      "writtenOn": "2017-12-04T15:45:33Z",
      "side": 1,
      "message": "Peri actually I also didn\u0027t know that one has to do a tx.cancel() for TransactionCommitFailedException... are you sure about this?  Really sure?? ;-)\n\nFYI even the RetryingManagedNewTransactionRunnerImpl also does not do this, AFAIK.",
      "parentUuid": "7a1969be_14f9abc8",
      "revId": "5a1a1f8a91c43e8bd341cf2a8724ae24d845898b",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_74d8df53",
        "filename": "idmanager/idmanager-impl/src/main/java/org/opendaylight/genius/idmanager/jobs/CleanUpJob.java",
        "patchSetId": 5
      },
      "lineNbr": 99,
      "author": {
        "id": 5278
      },
      "writtenOn": "2017-12-04T15:59:57Z",
      "side": 1,
      "message": "I\u0027m talking about https://github.com/opendaylight/genius/blob/master/mdsalutil/mdsalutil-api/src/main/java/org/opendaylight/genius/infra/ManagedNewTransactionRunnerImpl.java#L63 which is eventually used by RetryingTxRunnerImpl (???). If tx.cancel() is not needed, what is actually causing tx leaks ? I\u0027m trying to understand other benefits TxRunner brings to applications apart from tx abstraction and retries capability.",
      "parentUuid": "7a1969be_340027aa",
      "revId": "5a1a1f8a91c43e8bd341cf2a8724ae24d845898b",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_b4e25701",
        "filename": "idmanager/idmanager-impl/src/main/java/org/opendaylight/genius/idmanager/jobs/CleanUpJob.java",
        "patchSetId": 5
      },
      "lineNbr": 99,
      "author": {
        "id": 5278
      },
      "writtenOn": "2017-12-04T16:01:31Z",
      "side": 1,
      "message": "The actual link is: https://github.com/opendaylight/genius/blob/master/mdsalutil/mdsalutil-api/src/main/java/org/opendaylight/genius/infra/ManagedNewTransactionRunnerImpl.java#L67",
      "parentUuid": "7a1969be_74d8df53",
      "revId": "5a1a1f8a91c43e8bd341cf2a8724ae24d845898b",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_cde9411c",
        "filename": "idmanager/idmanager-impl/src/main/java/org/opendaylight/genius/idmanager/jobs/CleanUpJob.java",
        "patchSetId": 5
      },
      "lineNbr": 99,
      "author": {
        "id": 5278
      },
      "writtenOn": "2017-12-06T05:55:29Z",
      "side": 1,
      "message": "OK. I see your point. tx.cancel() is only needed for Exception thrown by application code which are the potential places for tx leaks.",
      "parentUuid": "7a1969be_b4e25701",
      "revId": "5a1a1f8a91c43e8bd341cf2a8724ae24d845898b",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_841a7e6c",
        "filename": "idmanager/idmanager-impl/src/main/java/org/opendaylight/genius/idmanager/jobs/CleanUpJob.java",
        "patchSetId": 5
      },
      "lineNbr": 99,
      "author": {
        "id": 4540
      },
      "writtenOn": "2017-12-07T15:00:24Z",
      "side": 1,
      "message": "The runner also avoids the many scenarios where a transaction is created and never submitted or cancelled, because of early returns. (These can obviously be found and fixed manually, but delegating the transaction handling to the runner means they can’t occur at all.)",
      "parentUuid": "7a1969be_cde9411c",
      "revId": "5a1a1f8a91c43e8bd341cf2a8724ae24d845898b",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}
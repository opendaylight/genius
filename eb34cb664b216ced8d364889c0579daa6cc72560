{
  "comments": [
    {
      "key": {
        "uuid": "2e493c9a_d283d00a",
        "filename": "itm/itm-impl/src/main/java/org/opendaylight/genius/itm/impl/ITMBatchingUtils.java",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1842
      },
      "writtenOn": "2018-04-10T13:53:51Z",
      "side": 1,
      "message": "I am really not a fan of this class (one reason is the static nature) and want to get rid of it (or rewrite it). Is there any way we can avoid perpetuating it\u0027s use here?",
      "revId": "eb34cb664b216ced8d364889c0579daa6cc72560",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4285b823_9a54af63",
        "filename": "itm/itm-impl/src/main/java/org/opendaylight/genius/itm/itmdirecttunnels/factory/DirectTunnelListenerFactory.java",
        "patchSetId": 6
      },
      "lineNbr": 41,
      "author": {
        "id": 1842
      },
      "writtenOn": "2018-04-10T13:53:51Z",
      "side": 1,
      "message": "So this class just has a single static method to wrap creating a TunnelTopologyStateListener. There doesn\u0027t seem much point - why not just create a TunnelTopologyStateListener directly? Plus if the TunnelTopologyStateListener ctor changes then this method has to change as well.",
      "revId": "eb34cb664b216ced8d364889c0579daa6cc72560",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4956f109_93825720",
        "filename": "itm/itm-impl/src/main/java/org/opendaylight/genius/itm/itmdirecttunnels/factory/DirectTunnelListenerFactory.java",
        "patchSetId": 6
      },
      "lineNbr": 41,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-04-10T15:53:53Z",
      "side": 1,
      "message": "agreed, unless there is a good reason which we are missing and you want to explain, this also confused me while reviewing this and understanding what is what; why not just do the new TunnelTopologyStateListener in your DirectTunnelListenerResolver (which BTW I would probably rename).",
      "parentUuid": "4285b823_9a54af63",
      "revId": "eb34cb664b216ced8d364889c0579daa6cc72560",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa99f01d_3b673096",
        "filename": "itm/itm-impl/src/main/java/org/opendaylight/genius/itm/itmdirecttunnels/factory/DirectTunnelListenerResolver.java",
        "patchSetId": 6
      },
      "lineNbr": 29,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-04-10T15:53:53Z",
      "side": 1,
      "message": "nit pick: double space before implements in line below (sorry)",
      "revId": "eb34cb664b216ced8d364889c0579daa6cc72560",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9b67a9fe_31204664",
        "filename": "itm/itm-impl/src/main/java/org/opendaylight/genius/itm/itmdirecttunnels/factory/DirectTunnelListenerResolver.java",
        "patchSetId": 6
      },
      "lineNbr": 30,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-04-10T15:53:53Z",
      "side": 1,
      "message": "why not give this class a clearer name, such as TunnelTopologyStateListenerSomething?  Maybe TunnelTopologyStateListenerCreator?  I probably would not use the *Factory naming convention, in this particular case.",
      "revId": "eb34cb664b216ced8d364889c0579daa6cc72560",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cfe16c54_64853d0c",
        "filename": "itm/itm-impl/src/main/java/org/opendaylight/genius/itm/itmdirecttunnels/listeners/DpnTepStateListener.java",
        "patchSetId": 6
      },
      "lineNbr": 19,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-04-10T15:53:53Z",
      "side": 1,
      "message": "please use org.opendaylight.genius.tools.mdsal.listener.AbstractClusteredSyncDataTreeChangeListener instead now",
      "revId": "eb34cb664b216ced8d364889c0579daa6cc72560",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "425701a1_4294c7f9",
        "filename": "itm/itm-impl/src/main/java/org/opendaylight/genius/itm/itmdirecttunnels/listeners/DpnTepStateListener.java",
        "patchSetId": 6
      },
      "lineNbr": 36,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-04-10T15:53:53Z",
      "side": 1,
      "message": "nit pick: insert empty line before Logger (sorry)",
      "revId": "eb34cb664b216ced8d364889c0579daa6cc72560",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "41027ab0_578770dd",
        "filename": "itm/itm-impl/src/main/java/org/opendaylight/genius/itm/itmdirecttunnels/listeners/DpnTepStateListener.java",
        "patchSetId": 6
      },
      "lineNbr": 43,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-04-10T15:53:53Z",
      "side": 1,
      "message": "nit pick: no double empty line here (sorry)",
      "revId": "eb34cb664b216ced8d364889c0579daa6cc72560",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "031f464d_65412d2e",
        "filename": "itm/itm-impl/src/main/java/org/opendaylight/genius/itm/itmdirecttunnels/listeners/DpnTepStateListener.java",
        "patchSetId": 6
      },
      "lineNbr": 64,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-04-10T15:53:53Z",
      "side": 1,
      "message": "synchronized on the String tunnel name ... Tom, any thoughts?",
      "revId": "eb34cb664b216ced8d364889c0579daa6cc72560",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "00738c08_663a7621",
        "filename": "itm/itm-impl/src/main/java/org/opendaylight/genius/itm/itmdirecttunnels/listeners/DpnTepStateListener.java",
        "patchSetId": 6
      },
      "lineNbr": 106,
      "author": {
        "id": 1842
      },
      "writtenOn": "2018-04-10T13:53:51Z",
      "side": 1,
      "message": "Is addState really reusable or is it just used here? If the latter then why not move the code here? I\u0027ve said this before - IMO Utils classes should be for general, reusable code, otherwise I\u0027d prefer to not arbitrarily dump code into Utils classes - they can quickly become large and unwieldy with a hodgepodge of unrelated code.",
      "range": {
        "startLine": 106,
        "startChar": 69,
        "endLine": 106,
        "endChar": 77
      },
      "revId": "eb34cb664b216ced8d364889c0579daa6cc72560",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c3e330dd_35fe9f1d",
        "filename": "itm/itm-impl/src/main/java/org/opendaylight/genius/itm/itmdirecttunnels/listeners/DpnTepStateListener.java",
        "patchSetId": 6
      },
      "lineNbr": 108,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-04-10T15:53:53Z",
      "side": 1,
      "message": "just return directTunnelUtils.addState() instead",
      "revId": "eb34cb664b216ced8d364889c0579daa6cc72560",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a579d6c_01beafed",
        "filename": "itm/itm-impl/src/main/java/org/opendaylight/genius/itm/itmdirecttunnels/listeners/TunnelTopologyStateListener.java",
        "patchSetId": 6
      },
      "lineNbr": 22,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-04-10T15:53:53Z",
      "side": 1,
      "message": "org.opendaylight.genius.tools.mdsal.listener.AbstractClusteredSyncDataTreeChangeListener",
      "revId": "eb34cb664b216ced8d364889c0579daa6cc72560",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a20c3c00_9fe05652",
        "filename": "itm/itm-impl/src/main/java/org/opendaylight/genius/itm/itmdirecttunnels/renderer/ovs/utilities/DirectTunnelUtils.java",
        "patchSetId": 6
      },
      "lineNbr": 160,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-04-10T15:53:53Z",
      "side": 1,
      "message": "use Guava\u0027s ImmutableMap.of instead here",
      "revId": "eb34cb664b216ced8d364889c0579daa6cc72560",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7e0541f7_ad7cc153",
        "filename": "itm/itm-impl/src/main/java/org/opendaylight/genius/itm/itmdirecttunnels/renderer/ovs/utilities/DirectTunnelUtils.java",
        "patchSetId": 6
      },
      "lineNbr": 278,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-04-10T15:53:53Z",
      "side": 1,
      "message": "I would probably use Guava\u0027s ImmutableMap.builder() or even .builderWithExpectedSize() here instead... and then before you addTerminationPoint just build() and pass it",
      "revId": "eb34cb664b216ced8d364889c0579daa6cc72560",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a9f050d_5cd18c95",
        "filename": "itm/itm-impl/src/main/java/org/opendaylight/genius/itm/itmdirecttunnels/renderer/ovs/utilities/DirectTunnelUtils.java",
        "patchSetId": 6
      },
      "lineNbr": 392,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-04-10T15:53:53Z",
      "side": 1,
      "message": "error instead of warn?",
      "revId": "eb34cb664b216ced8d364889c0579daa6cc72560",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6f151a3_e440f4d3",
        "filename": "itm/itm-impl/src/main/java/org/opendaylight/genius/itm/itmdirecttunnels/renderer/ovs/utilities/DirectTunnelUtils.java",
        "patchSetId": 6
      },
      "lineNbr": 395,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-04-10T15:53:53Z",
      "side": 1,
      "message": "error instead of warn?  Or why not just let it propagate to the caller to handle?",
      "revId": "eb34cb664b216ced8d364889c0579daa6cc72560",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "75a52ea6_12539572",
        "filename": "itm/itm-impl/src/main/java/org/opendaylight/genius/itm/itmdirecttunnels/renderer/ovs/utilities/DirectTunnelUtils.java",
        "patchSetId": 6
      },
      "lineNbr": 569,
      "author": {
        "id": 1842
      },
      "writtenOn": "2018-04-10T13:53:51Z",
      "side": 1,
      "message": "A lot of new code has been added to this class and it\u0027s now over 560 lines. This illustrates my earlier comment. Please (re-)consider whether some or all of this code is really general and reusable or makes sense to move to the (lone) caller.",
      "revId": "eb34cb664b216ced8d364889c0579daa6cc72560",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}
{
  "comments": [
    {
      "key": {
        "uuid": "51116868_6b6ab0ed",
        "filename": "interfacemanager/interfacemanager-api/src/main/java/org/opendaylight/genius/interfacemanager/interfaces/IInterfaceManager.java",
        "patchSetId": 2
      },
      "lineNbr": 113,
      "author": {
        "id": 817
      },
      "writtenOn": "2018-08-22T08:05:12Z",
      "side": 1,
      "message": "this is not used anywhere in netvirt?",
      "revId": "844dec0bb8c40d8b0d724ea193a30f7e028e521e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "acbb9543_decaf12f",
        "filename": "interfacemanager/interfacemanager-api/src/main/java/org/opendaylight/genius/interfacemanager/interfaces/IInterfaceManager.java",
        "patchSetId": 2
      },
      "lineNbr": 113,
      "author": {
        "id": 4540
      },
      "writtenOn": "2018-08-22T08:31:15Z",
      "side": 1,
      "message": "No (but thanks for asking!).",
      "parentUuid": "51116868_6b6ab0ed",
      "revId": "844dec0bb8c40d8b0d724ea193a30f7e028e521e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a20a9e93_1786ad6b",
        "filename": "interfacemanager/interfacemanager-impl/src/main/java/org/opendaylight/genius/interfacemanager/servicebindings/flowbased/config/helpers/FlowBasedIngressServicesConfigBindHelper.java",
        "patchSetId": 2
      },
      "lineNbr": 109,
      "author": {
        "id": 817
      },
      "writtenOn": "2018-08-22T10:52:08Z",
      "side": 1,
      "message": "there is no need for this to be sequential.. the delete and create are for two separate nodes",
      "revId": "844dec0bb8c40d8b0d724ea193a30f7e028e521e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f984550e_a2c63588",
        "filename": "interfacemanager/interfacemanager-impl/src/main/java/org/opendaylight/genius/interfacemanager/servicebindings/flowbased/config/helpers/FlowBasedIngressServicesConfigBindHelper.java",
        "patchSetId": 2
      },
      "lineNbr": 109,
      "author": {
        "id": 4540
      },
      "writtenOn": "2018-08-22T12:36:12Z",
      "side": 1,
      "message": "OK, thanks for the info.",
      "parentUuid": "a20a9e93_1786ad6b",
      "revId": "844dec0bb8c40d8b0d724ea193a30f7e028e521e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f4818fc_50124e34",
        "filename": "interfacemanager/interfacemanager-impl/src/main/java/org/opendaylight/genius/interfacemanager/servicebindings/flowbased/listeners/FlowBasedServicesInterfaceStateListener.java",
        "patchSetId": 2
      },
      "lineNbr": 147,
      "author": {
        "id": 817
      },
      "writtenOn": "2018-08-22T10:52:08Z",
      "side": 1,
      "message": "isn\u0027t this confTx just used for a READ here now? do we need managedtransactionrunner for that?",
      "revId": "844dec0bb8c40d8b0d724ea193a30f7e028e521e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53ede9d0_803b14a9",
        "filename": "interfacemanager/interfacemanager-impl/src/main/java/org/opendaylight/genius/interfacemanager/servicebindings/flowbased/listeners/FlowBasedServicesInterfaceStateListener.java",
        "patchSetId": 2
      },
      "lineNbr": 147,
      "author": {
        "id": 4540
      },
      "writtenOn": "2018-08-22T12:36:12Z",
      "side": 1,
      "message": "It is, I\u0027ll be adding support for read transactions and re-visiting this.",
      "parentUuid": "4f4818fc_50124e34",
      "revId": "844dec0bb8c40d8b0d724ea193a30f7e028e521e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4dc55315_674194f9",
        "filename": "interfacemanager/interfacemanager-impl/src/main/java/org/opendaylight/genius/interfacemanager/servicebindings/flowbased/listeners/FlowBasedServicesInterfaceStateListener.java",
        "patchSetId": 2
      },
      "lineNbr": 148,
      "author": {
        "id": 4540
      },
      "writtenOn": "2018-08-21T12:56:39Z",
      "side": 1,
      "message": "This is one example of potentially asynchronous transaction handling (albeit not at the read level).",
      "revId": "844dec0bb8c40d8b0d724ea193a30f7e028e521e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8fcd50e6_1c7028cd",
        "filename": "interfacemanager/interfacemanager-impl/src/main/java/org/opendaylight/genius/interfacemanager/servicebindings/flowbased/listeners/FlowBasedServicesInterfaceStateListener.java",
        "patchSetId": 2
      },
      "lineNbr": 148,
      "author": {
        "id": 817
      },
      "writtenOn": "2018-08-23T02:28:40Z",
      "side": 1,
      "message": "Stephen, I have not gone into the details of the transformAsync.. But could you plase confirm that both these operations will come in the context of the same Jobccordinator job, and we will not end up doing the two operations separately? It is important for the functionality that this whole job gets executed before we take up a new job for the same key from job-coordinator",
      "parentUuid": "4dc55315_674194f9",
      "revId": "844dec0bb8c40d8b0d724ea193a30f7e028e521e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}
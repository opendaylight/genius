{
  "comments": [
    {
      "key": {
        "uuid": "fafc7978_3df59f83",
        "filename": "interfacemanager/interfacemanager-impl/src/main/java/org/opendaylight/genius/interfacemanager/listeners/InterfaceConfigListener.java",
        "patchSetId": 26
      },
      "lineNbr": 93,
      "author": {
        "id": 817
      },
      "writtenOn": "2017-01-30T11:49:33Z",
      "side": 1,
      "message": "why do we have to do this for remove and update?",
      "revId": "5982d277b037f1be908757334ca09305794e5fd8",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_7def27b1",
        "filename": "interfacemanager/interfacemanager-impl/src/main/java/org/opendaylight/genius/interfacemanager/listeners/InterfaceConfigListener.java",
        "patchSetId": 26
      },
      "lineNbr": 125,
      "author": {
        "id": 817
      },
      "writtenOn": "2017-01-30T11:49:33Z",
      "side": 1,
      "message": "if u do update here, this will trigger the update DCN once again...my question was, why do we do enqueuJob at line 133, apart from calling update DCN? isn\u0027t that unnecessary? both are going to do the same operations",
      "revId": "5982d277b037f1be908757334ca09305794e5fd8",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_b84a3a81",
        "filename": "interfacemanager/interfacemanager-impl/src/main/java/org/opendaylight/genius/interfacemanager/listeners/InterfaceConfigListener.java",
        "patchSetId": 26
      },
      "lineNbr": 125,
      "author": {
        "id": 817
      },
      "writtenOn": "2017-01-31T05:46:01Z",
      "side": 1,
      "message": "what i meant is, when add comes -\u003e if u r calling updateInterfaceParentRefs(), and then passing the new parentRefs to the subsequent lines in addWorker, how will add return since parentRefs is populated by the updateParentRefs()?",
      "parentUuid": "fafc7978_7def27b1",
      "revId": "5982d277b037f1be908757334ca09305794e5fd8",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_2b0c3242",
        "filename": "interfacemanager/interfacemanager-impl/src/main/java/org/opendaylight/genius/interfacemanager/listeners/InterfaceConfigListener.java",
        "patchSetId": 26
      },
      "lineNbr": 125,
      "author": {
        "id": 670
      },
      "writtenOn": "2017-01-31T10:13:13Z",
      "side": 1,
      "message": "To tell you the truth I\u0027m very confused about the current RendererConfig code, and their use of parentRefs -- I already commented a couple of times on this.\nI don\u0027t mind refactoring this code to make sense if you can explain what it\u0027s supposed to look like - I was trying to preserve the already existing odd behavior of getting a parentRef, then doing updateParentInterface, then passing the new parentRefs to the RendererConfigAddWorker.\n\nI don\u0027t understand what you mean by \"how will add return\" - why wouldn\u0027t it?",
      "parentUuid": "fafc7978_b84a3a81",
      "revId": "5982d277b037f1be908757334ca09305794e5fd8",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_aee9501c",
        "filename": "interfacemanager/interfacemanager-impl/src/main/java/org/opendaylight/genius/interfacemanager/listeners/InterfaceConfigListener.java",
        "patchSetId": 26
      },
      "lineNbr": 125,
      "author": {
        "id": 817
      },
      "writtenOn": "2017-01-31T10:34:10Z",
      "side": 1,
      "message": "the code is like this because there are other applications(other than neutronvpn) which add interface config DS, with dpn-id + portName.. they want to update parentInterface in parentRefs to dpnId:portName so that they will get a unique identifier to populate interface-child-info map. They were never doing an update of interface configDS with the new data, they were just passing the updated string to the AddWorker.. Now with your changes u r passig the updated parentRefs to addWorker + you are triggering one more updateDCN, basically executing two jobs...",
      "parentUuid": "fafc7978_2b0c3242",
      "revId": "5982d277b037f1be908757334ca09305794e5fd8",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_4e73844d",
        "filename": "interfacemanager/interfacemanager-impl/src/main/java/org/opendaylight/genius/interfacemanager/listeners/InterfaceConfigListener.java",
        "patchSetId": 26
      },
      "lineNbr": 125,
      "author": {
        "id": 670
      },
      "writtenOn": "2017-01-31T11:08:24Z",
      "side": 1,
      "message": "Ok, I understand what you\u0027re saying.\nIf you could log onto IRC it would be easier to discuss..\n\nCould you look at the current code behavior in regard to updateParentInterface? It is only called if !isTunnelInterface and there is a datapathNodeIdentifer.\nHowever, looking at interfaces of an existing setup, I see only tunnel interfaces have a datapathNodeIdentifier. This is what I was referring to as dead code in the beginning of the review.\nI would like to try to fix this, as I want all parentRef guessing to move to use interfaceMgrProvider.getParentRefNameForInterface",
      "parentUuid": "fafc7978_aee9501c",
      "revId": "5982d277b037f1be908757334ca09305794e5fd8",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_bfddfc16",
        "filename": "interfacemanager/interfacemanager-impl/src/main/java/org/opendaylight/genius/interfacemanager/listeners/InterfaceConfigListener.java",
        "patchSetId": 26
      },
      "lineNbr": 125,
      "author": {
        "id": 817
      },
      "writtenOn": "2017-01-31T16:15:20Z",
      "side": 1,
      "message": "we have some other usecases which will be upstreamed soon, where we have to support non-unique port names across switches.. in that case the portname is made unique by prefixing the dpn-id which will come from northbound...the northbound is not neutron-vpn and is a separate module in that case.. Send me an email whenever you are online on IRC..we can have further discussion",
      "parentUuid": "fafc7978_4e73844d",
      "revId": "5982d277b037f1be908757334ca09305794e5fd8",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}
{
  "comments": [
    {
      "key": {
        "uuid": "fafc7978_7e054179",
        "filename": "interfacemanager/interfacemanager-impl/src/main/java/org/opendaylight/genius/interfacemanager/InterfacemgrProvider.java",
        "patchSetId": 30
      },
      "lineNbr": 626,
      "author": {
        "id": 817
      },
      "writtenOn": "2017-02-04T11:19:23Z",
      "side": 1,
      "message": "my question on synchronization is this.. you have to use DJC key same as neutron vpn coz neutronvpn is the one who was previously writing and updating interface config DS..by using the same key, you ensure that interface config ADD/UPDATE will be processed in same order in single node..i have two questions here:\n\n1. will there be a case, where neutronvpn interface add comes later than terminationpoint add event? what will be the behavior then?\n\n2. previously since both the events were triggered by neutronvpn, both add and update would have been triggered by the same node, and things were synchronized. Now, add is still done by neutronVPN, and update by interface-manager, both events can be triggered on different nodes, and can\u0027t these events go out of order? I basically want to make sure when update and add are triggered out of order, the code should still work.. I am not able to understand whether that is already taken care, pls do confirm if that is already in place",
      "revId": "a7f29b08ea15b4da7a45b171a439ea4edf95e192",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_3ef3b99f",
        "filename": "interfacemanager/interfacemanager-impl/src/main/java/org/opendaylight/genius/interfacemanager/InterfacemgrProvider.java",
        "patchSetId": 30
      },
      "lineNbr": 626,
      "author": {
        "id": 670
      },
      "writtenOn": "2017-02-04T12:53:30Z",
      "side": 1,
      "message": "I don\u0027t think it really matters, since InterfaceConfigListener will only wake up and attempt to append the parentInterface after the write happened, meaning the neutronvpn DJC was already processed.\n\n1. Yes. In this case InterfaceConfigListener will handle the updating of the parentRef (currently scanning for a TP that points to it, and Vishal will fix this into a cache later).\n\n2. See above. InterfaceConfigListener will only trigger after the write itself, meaning neutronvpn processing is done.",
      "parentUuid": "fafc7978_7e054179",
      "revId": "a7f29b08ea15b4da7a45b171a439ea4edf95e192",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_9e8745d7",
        "filename": "interfacemanager/interfacemanager-impl/src/main/java/org/opendaylight/genius/interfacemanager/InterfacemgrProvider.java",
        "patchSetId": 30
      },
      "lineNbr": 626,
      "author": {
        "id": 817
      },
      "writtenOn": "2017-02-04T17:29:42Z",
      "side": 1,
      "message": "doing updateParentRefs() from within InterfaceConfigListener is perfectly fine! that is having no issues.. my worry is only on the updateParentRefs() being called from TerminationPointListener... suppose you have a 3 node cluster.. neutronvpn interface config add, and interface-mananager terminationpointlistener updateParentRefs() gets fired at same time.. so, as per your comment, neutronvpn event order does not matter, coz terminationpointlistener will not even process the event since interface is not created yet. then, i think you are right...the DJC key should be parentInterface, rather than neutronvpn key.. you can change it back... also, hope you have tested this change in clustered setup, by booting an openstack VM on network, rather than port.. the northbound and southbound events coming exactly at same time is more visible when we do that way..",
      "parentUuid": "fafc7978_3ef3b99f",
      "revId": "a7f29b08ea15b4da7a45b171a439ea4edf95e192",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_fe25b1c2",
        "filename": "interfacemanager/interfacemanager-impl/src/main/java/org/opendaylight/genius/interfacemanager/InterfacemgrProvider.java",
        "patchSetId": 30
      },
      "lineNbr": 626,
      "author": {
        "id": 670
      },
      "writtenOn": "2017-02-05T09:47:13Z",
      "side": 1,
      "message": "I am testing this with CSIT in addition to the basic tests, I am running 3node as well - which has plenty of VMs booting on the network..\n\nI changed the key to \"interfaceName\" - it should be the interfaceName, not the parentInterface, since we do the writing to the key interfaceName.. right?",
      "parentUuid": "fafc7978_9e8745d7",
      "revId": "a7f29b08ea15b4da7a45b171a439ea4edf95e192",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_1ed7d5ee",
        "filename": "interfacemanager/interfacemanager-impl/src/main/java/org/opendaylight/genius/interfacemanager/listeners/InterfaceConfigListener.java",
        "patchSetId": 30
      },
      "lineNbr": 71,
      "author": {
        "id": 817
      },
      "writtenOn": "2017-02-04T11:19:23Z",
      "side": 1,
      "message": "not returning parentRefs for the configDCN part looks good now.",
      "revId": "a7f29b08ea15b4da7a45b171a439ea4edf95e192",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_de68ad23",
        "filename": "interfacemanager/interfacemanager-impl/src/main/java/org/opendaylight/genius/interfacemanager/listeners/TerminationPointStateListener.java",
        "patchSetId": 30
      },
      "lineNbr": 87,
      "author": {
        "id": 817
      },
      "writtenOn": "2017-02-04T17:46:12Z",
      "side": 1,
      "message": "now i feel, there is no need of EOS itself here, as there is no race condition i could see...since interfaceconfigDS is fetched before updating parent-refs, it will not even proceed further if config is not there.. however i do understand that the listener is clustered and hence we need some way not to run it on all nodes. just a thought for future improvement!",
      "revId": "a7f29b08ea15b4da7a45b171a439ea4edf95e192",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_de20adb2",
        "filename": "interfacemanager/interfacemanager-impl/src/main/java/org/opendaylight/genius/interfacemanager/listeners/TerminationPointStateListener.java",
        "patchSetId": 30
      },
      "lineNbr": 87,
      "author": {
        "id": 670
      },
      "writtenOn": "2017-02-05T09:47:13Z",
      "side": 1,
      "message": "yeah, since its a clustered listener we need the ability to run it once, EOS is a good solution for now but food for thought :)",
      "parentUuid": "fafc7978_de68ad23",
      "revId": "a7f29b08ea15b4da7a45b171a439ea4edf95e192",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_5e083d91",
        "filename": "interfacemanager/interfacemanager-impl/src/main/java/org/opendaylight/genius/interfacemanager/listeners/TerminationPointStateListener.java",
        "patchSetId": 30
      },
      "lineNbr": 100,
      "author": {
        "id": 817
      },
      "writtenOn": "2017-02-04T11:19:23Z",
      "side": 1,
      "message": "if interface config DS is not populated by the time we receive this event, won\u0027t we create an interface entry only with parent-refs?",
      "revId": "a7f29b08ea15b4da7a45b171a439ea4edf95e192",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_7e2c2103",
        "filename": "interfacemanager/interfacemanager-impl/src/main/java/org/opendaylight/genius/interfacemanager/listeners/TerminationPointStateListener.java",
        "patchSetId": 30
      },
      "lineNbr": 100,
      "author": {
        "id": 670
      },
      "writtenOn": "2017-02-04T12:53:30Z",
      "side": 1,
      "message": "see implementation of ParentRefUpdateWorker in InterfacemgrProvider - it will only write something if the interface config exists. This write of parentRef only wouldn\u0027t work otherwise by the way, since it is missing mandatory fields.",
      "parentUuid": "fafc7978_5e083d91",
      "revId": "a7f29b08ea15b4da7a45b171a439ea4edf95e192",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_de21cdfd",
        "filename": "interfacemanager/interfacemanager-impl/src/main/java/org/opendaylight/genius/interfacemanager/listeners/TerminationPointStateListener.java",
        "patchSetId": 30
      },
      "lineNbr": 100,
      "author": {
        "id": 817
      },
      "writtenOn": "2017-02-04T17:29:42Z",
      "side": 1,
      "message": "perfect! no issues here then",
      "parentUuid": "fafc7978_7e2c2103",
      "revId": "a7f29b08ea15b4da7a45b171a439ea4edf95e192",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_3e78d9f1",
        "filename": "interfacemanager/interfacemanager-impl/src/main/java/org/opendaylight/genius/interfacemanager/renderer/ovs/statehelpers/OvsInterfaceStateUpdateHelper.java",
        "patchSetId": 30
      },
      "lineNbr": 71,
      "author": {
        "id": 817
      },
      "writtenOn": "2017-02-04T17:46:12Z",
      "side": 1,
      "message": "why is this moved inside tunnel check?",
      "revId": "a7f29b08ea15b4da7a45b171a439ea4edf95e192",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_be132965",
        "filename": "interfacemanager/interfacemanager-impl/src/main/java/org/opendaylight/genius/interfacemanager/renderer/ovs/statehelpers/OvsInterfaceStateUpdateHelper.java",
        "patchSetId": 30
      },
      "lineNbr": 71,
      "author": {
        "id": 670
      },
      "writtenOn": "2017-02-05T09:47:13Z",
      "side": 1,
      "message": "technically we already checked for this condition earlier, and we only change the value inside the if, so no need to check again outside the if..\nbut I reverted this change now, it isn\u0027t really relevant..",
      "parentUuid": "fafc7978_3e78d9f1",
      "revId": "a7f29b08ea15b4da7a45b171a439ea4edf95e192",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}
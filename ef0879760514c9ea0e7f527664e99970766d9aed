{
  "comments": [
    {
      "key": {
        "uuid": "4f810adc_dd99b74d",
        "filename": "mdsalutil/mdsalutil-api/src/main/java/org/opendaylight/genius/mdsalutil/NWUtil.java",
        "patchSetId": 1
      },
      "lineNbr": 301,
      "author": {
        "id": 5197
      },
      "writtenOn": "2018-06-14T10:27:18Z",
      "side": 1,
      "message": "should we actually keep this code in a try {} catch block and then \"throw new Illegal...\" if there is an exception?\n\nIn the current state, if there is an invalid argument (i.e., ipPrefix), AFAIK we would get exception in this line. \n\n@Java Gurus, appreciate your comments on this. thanks.",
      "range": {
        "startLine": 301,
        "startChar": 8,
        "endLine": 301,
        "endChar": 64
      },
      "revId": "ef0879760514c9ea0e7f527664e99970766d9aed",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bedc10fe_aee9ddd8",
        "filename": "mdsalutil/mdsalutil-api/src/main/java/org/opendaylight/genius/mdsalutil/NWUtil.java",
        "patchSetId": 1
      },
      "lineNbr": 301,
      "author": {
        "id": 1842
      },
      "writtenOn": "2018-06-14T11:41:00Z",
      "side": 1,
      "message": "forString already throws RuntimeEx\u0027s (IAE and AssertionError) which would get propagated so why would you add a try/catch/rethrow here?",
      "parentUuid": "4f810adc_dd99b74d",
      "range": {
        "startLine": 301,
        "startChar": 8,
        "endLine": 301,
        "endChar": 64
      },
      "revId": "ef0879760514c9ea0e7f527664e99970766d9aed",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9b036f12_c953838e",
        "filename": "mdsalutil/mdsalutil-api/src/main/java/org/opendaylight/genius/mdsalutil/NWUtil.java",
        "patchSetId": 1
      },
      "lineNbr": 301,
      "author": {
        "id": 5197
      },
      "writtenOn": "2018-06-14T11:48:59Z",
      "side": 1,
      "message": "For an invalid ipPrefix, we want to throw IAE exception alone right (which would be apt for this API) and not other exceptions, isn\u0027t it?\n\nIf you think this is not the case, then we can have it as-is.",
      "parentUuid": "bedc10fe_aee9ddd8",
      "range": {
        "startLine": 301,
        "startChar": 8,
        "endLine": 301,
        "endChar": 64
      },
      "revId": "ef0879760514c9ea0e7f527664e99970766d9aed",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "02bf99b1_214dea2e",
        "filename": "mdsalutil/mdsalutil-api/src/main/java/org/opendaylight/genius/mdsalutil/NWUtil.java",
        "patchSetId": 1
      },
      "lineNbr": 301,
      "author": {
        "id": 1842
      },
      "writtenOn": "2018-06-14T12:19:56Z",
      "side": 1,
      "message": "Take a look at the forString code - it throws IAE for invalid prefix. The AssertionError (which is a bit odd) is thrown to wrap UnknownHostEx from InetAddress.getByAddress which really shouldn\u0027t happen b/c the address should already be validated. That said if you only want IAE propagated then you could catch other RuntimeEx types and re-throw as IAE.",
      "parentUuid": "9b036f12_c953838e",
      "range": {
        "startLine": 301,
        "startChar": 8,
        "endLine": 301,
        "endChar": 64
      },
      "revId": "ef0879760514c9ea0e7f527664e99970766d9aed",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b2082a4c_30f33854",
        "filename": "mdsalutil/mdsalutil-api/src/test/java/org/opendaylight/genius/mdsalutil/tests/NWUtilTest.java",
        "patchSetId": 1
      },
      "lineNbr": 96,
      "author": {
        "id": 5197
      },
      "writtenOn": "2018-06-14T10:27:18Z",
      "side": 1,
      "message": "Please add some negative tests (i.e., invalid args)",
      "range": {
        "startLine": 96,
        "startChar": 8,
        "endLine": 96,
        "endChar": 87
      },
      "revId": "ef0879760514c9ea0e7f527664e99970766d9aed",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}
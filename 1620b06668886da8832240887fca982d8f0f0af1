{
  "comments": [
    {
      "key": {
        "uuid": "aa4615d3_6efb824e",
        "filename": "mdsalutil/mdsalutil-api/src/main/java/org/opendaylight/genius/datastoreutils/listeners/DataTreeEventCallbackRegistrar.java",
        "patchSetId": 5
      },
      "lineNbr": 54,
      "author": {
        "id": 5357
      },
      "writtenOn": "2018-04-24T11:47:38Z",
      "side": 1,
      "message": "Sorry but I need those already. Turns out onAddOrUpdate is real important.",
      "revId": "1620b06668886da8832240887fca982d8f0f0af1",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c3c161f9_49950aa9",
        "filename": "mdsalutil/mdsalutil-api/src/main/java/org/opendaylight/genius/datastoreutils/listeners/DataTreeEventCallbackRegistrar.java",
        "patchSetId": 5
      },
      "lineNbr": 54,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-04-30T10:25:36Z",
      "side": 1,
      "message": "Done in Patch Set 6 (currently a Draft, as more is coming anyway).",
      "parentUuid": "aa4615d3_6efb824e",
      "revId": "1620b06668886da8832240887fca982d8f0f0af1",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f9b202f9_36b13087",
        "filename": "mdsalutil/mdsalutil-impl/src/main/java/org/opendaylight/genius/datastoreutils/listeners/internal/DataTreeEventCallbackRegistrarImpl.java",
        "patchSetId": 5
      },
      "lineNbr": 186,
      "author": {
        "id": 5357
      },
      "writtenOn": "2018-04-24T11:47:38Z",
      "side": 1,
      "message": "I think you need to do some locking so that the timeout cb can not be invoked while you are handling a notification.",
      "revId": "1620b06668886da8832240887fca982d8f0f0af1",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2bded839_1101e55e",
        "filename": "mdsalutil/mdsalutil-impl/src/main/java/org/opendaylight/genius/datastoreutils/listeners/internal/DataTreeEventCallbackRegistrarImpl.java",
        "patchSetId": 5
      },
      "lineNbr": 186,
      "author": {
        "id": 1842
      },
      "writtenOn": "2018-04-24T12:42:27Z",
      "side": 1,
      "message": "It seems it should cancel  prior to this loop.",
      "parentUuid": "f9b202f9_36b13087",
      "revId": "1620b06668886da8832240887fca982d8f0f0af1",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aab2f667_4889ba28",
        "filename": "mdsalutil/mdsalutil-impl/src/main/java/org/opendaylight/genius/datastoreutils/listeners/internal/DataTreeEventCallbackRegistrarImpl.java",
        "patchSetId": 5
      },
      "lineNbr": 186,
      "author": {
        "id": 5357
      },
      "writtenOn": "2018-04-25T10:42:58Z",
      "side": 1,
      "message": "That would be better.",
      "parentUuid": "2bded839_1101e55e",
      "revId": "1620b06668886da8832240887fca982d8f0f0af1",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "765ae9aa_c6ee44d7",
        "filename": "mdsalutil/mdsalutil-impl/src/main/java/org/opendaylight/genius/datastoreutils/listeners/internal/DataTreeEventCallbackRegistrarImpl.java",
        "patchSetId": 5
      },
      "lineNbr": 186,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-04-30T10:25:36Z",
      "side": 1,
      "message": "I\u0027ll do this in the next Change Set, but in order to be able to do this TDD and cover this possible issue in a new testTimeoutCallbackNotInvokedWhileHandlingChangeNotification(), first need to have a TestableDataBroker and TestableScheduledExecutorService - which I thought Tom wanted to do in a separate follow-up change; but I\u0027ll make a start with this in this change already, to take this into account.  \n\nI agree with needing some sort of locking and will propose something in that direction.  I disagree that we should cancel the ScheduledFuture on every onDataTreeChanged (if that is what you both meant here?), because: (a) that would require a new scheduledExecutorService.schedule() in case of NextAction.CALL_AGAIN, which means that the timeout restarts on every onDataTreeChanged() instead of from DataTreeEventCallbackRegistrar\u0027s onAdd|[Or]Update|Remove()  onwards, unless we \"compensate\" for it (which would be somewhat imprecise?); and (b) not sure how performant doing a lot of burst schedule() are.",
      "parentUuid": "aab2f667_4889ba28",
      "revId": "1620b06668886da8832240887fca982d8f0f0af1",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ee8931b_ae3367b3",
        "filename": "mdsalutil/mdsalutil-impl/src/main/java/org/opendaylight/genius/datastoreutils/listeners/internal/DataTreeEventCallbackRegistrarImpl.java",
        "patchSetId": 5
      },
      "lineNbr": 186,
      "author": {
        "id": 1842
      },
      "writtenOn": "2018-04-30T11:52:57Z",
      "side": 1,
      "message": "\u003e I\u0027ll do this in the next Change Set, but in order to be able to do\n \u003e this TDD and cover this possible issue in a new testTimeoutCallbackNotInvokedWhileHandlingChangeNotification(),\n \u003e first need to have a TestableDataBroker and TestableScheduledExecutorService\n \u003e - which I thought Tom wanted to do in a separate follow-up change;\n \u003e but I\u0027ll make a start with this in this change already, to take\n \u003e this into account.\n\nyes - I can do the UTs for concurrency.\n\n \u003e \n \u003e I agree with needing some sort of locking and will propose\n \u003e something in that direction.  I disagree that we should cancel the\n \u003e ScheduledFuture on every onDataTreeChanged (if that is what you\n \u003e both meant here?), because: (a) that would require a new\n \u003e scheduledExecutorService.schedule() in case of NextAction.CALL_AGAIN,\n \u003e which means that the timeout restarts on every onDataTreeChanged()\n \u003e instead of from DataTreeEventCallbackRegistrar\u0027s onAdd|[Or]Update|Remove()\n \u003e  onwards, unless we \"compensate\" for it (which would be somewhat\n \u003e imprecise?); and (b) not sure how performant doing a lot of burst\n \u003e schedule() are.\n\nI guess I don\u0027t know the semantics of CALL_AGAIN - I\u0027ll have to study that path.",
      "parentUuid": "765ae9aa_c6ee44d7",
      "revId": "1620b06668886da8832240887fca982d8f0f0af1",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a218da7_3b78f635",
        "filename": "mdsalutil/mdsalutil-impl/src/main/java/org/opendaylight/genius/datastoreutils/listeners/internal/DataTreeEventCallbackRegistrarImpl.java",
        "patchSetId": 5
      },
      "lineNbr": 225,
      "author": {
        "id": 5357
      },
      "writtenOn": "2018-04-24T11:47:38Z",
      "side": 1,
      "message": "I\u0027m missing something, how come the scheduled future doesn\u0027t need to be canceled here?",
      "revId": "1620b06668886da8832240887fca982d8f0f0af1",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3bedb847_9a8ae8ef",
        "filename": "mdsalutil/mdsalutil-impl/src/main/java/org/opendaylight/genius/datastoreutils/listeners/internal/DataTreeEventCallbackRegistrarImpl.java",
        "patchSetId": 5
      },
      "lineNbr": 225,
      "author": {
        "id": 1842
      },
      "writtenOn": "2018-04-24T12:42:27Z",
      "side": 1,
      "message": "This is also called when the timer triggers.",
      "parentUuid": "7a218da7_3b78f635",
      "revId": "1620b06668886da8832240887fca982d8f0f0af1",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3d138e17_3b21916a",
        "filename": "mdsalutil/mdsalutil-impl/src/main/java/org/opendaylight/genius/datastoreutils/listeners/internal/DataTreeEventCallbackRegistrarImpl.java",
        "patchSetId": 5
      },
      "lineNbr": 225,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-04-30T10:25:36Z",
      "side": 1,
      "message": "Josh I believe you are missing that in line 214 above (in this change set; it will move in the next) there is a timeOutScheduledFuture.cancel().",
      "parentUuid": "3bedb847_9a8ae8ef",
      "revId": "1620b06668886da8832240887fca982d8f0f0af1",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}